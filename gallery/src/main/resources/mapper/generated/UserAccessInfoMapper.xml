<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trs.gallery.mapper.generated.UserAccessInfoMapper">
  <resultMap id="BaseResultMap" type="com.trs.gallery.entity.generated.UserAccessInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="ACCESS_ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="USER_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="DOC_ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="ACCESS_TIME" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ACCESS_ID, USER_NAME, DOC_ID, ACCESS_TIME
  </sql>
  <select id="selectByExample" parameterType="com.trs.gallery.entity.generated.UserAccessInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from gallery_user_access
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from gallery_user_access
    where ACCESS_ID = #{accessId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from gallery_user_access
    where ACCESS_ID = #{accessId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.trs.gallery.entity.generated.UserAccessInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into gallery_user_access (ACCESS_ID, USER_NAME, DOC_ID, 
      ACCESS_TIME)
    values (#{accessId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{docId,jdbcType=INTEGER}, 
      #{accessTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.trs.gallery.entity.generated.UserAccessInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into gallery_user_access
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accessId != null">
        ACCESS_ID,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="docId != null">
        DOC_ID,
      </if>
      <if test="accessTime != null">
        ACCESS_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accessId != null">
        #{accessId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="docId != null">
        #{docId,jdbcType=INTEGER},
      </if>
      <if test="accessTime != null">
        #{accessTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.trs.gallery.entity.generated.UserAccessInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gallery_user_access
    <set>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="docId != null">
        DOC_ID = #{docId,jdbcType=INTEGER},
      </if>
      <if test="accessTime != null">
        ACCESS_TIME = #{accessTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ACCESS_ID = #{accessId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.trs.gallery.entity.generated.UserAccessInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gallery_user_access
    set USER_NAME = #{userName,jdbcType=VARCHAR},
      DOC_ID = #{docId,jdbcType=INTEGER},
      ACCESS_TIME = #{accessTime,jdbcType=TIMESTAMP}
    where ACCESS_ID = #{accessId,jdbcType=INTEGER}
  </update>
</mapper>